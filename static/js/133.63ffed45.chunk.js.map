{"version":3,"file":"static/js/133.63ffed45.chunk.js","mappings":"+NAGe,SAASA,EAAOC,GAAe,IAAZC,EAAOD,EAAPC,QAChCC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAM1B,OAJAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBR,GAASS,MAAK,SAAAC,GAAO,OAAIJ,EAAWI,EAAQC,QAAQ,GACxE,GAAG,CAACX,KAGFY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGT,EAAQU,OAAS,GAChBH,EAAAA,EAAAA,KAAA,MAAAE,SACGT,EAAQW,KAAI,SAAAC,GAAE,OACbC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aACLG,EAAGE,WAENP,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,EAAGG,YALAH,EAAGI,GAMP,OAITT,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAIZ,C","sources":["views/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../services/Api';\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(request => setReviews(request.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(el => (\n            <li key={el.id}>\n              <p>\n                <span>Author: </span>\n                {el.author}\n              </p>\n              <p>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>No reviews</h2>\n      )}\n    </>\n  );\n}\n"],"names":["Reviews","_ref","movieId","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchMovieReviews","then","request","results","_jsx","_Fragment","children","length","map","el","_jsxs","author","content","id"],"sourceRoot":""}